{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport { defineJQueryPlugin, getElement, getSelectorFromElement, getElementFromSelector, reflow, typeCheckConfig } from './util/index';\nimport Data from './dom/data';\nimport EventHandler from './dom/event-handler';\nimport Manipulator from './dom/manipulator';\nimport SelectorEngine from './dom/selector-engine';\nimport BaseComponent from './base-component';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'collapse';\nconst DATA_KEY = 'bs.collapse';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst DATA_API_KEY = '.data-api';\nconst Default = {\n  toggle: true,\n  parent: ''\n};\nconst DefaultType = {\n  toggle: 'boolean',\n  parent: '(string|element)'\n};\nconst EVENT_SHOW = `show${EVENT_KEY}`;\nconst EVENT_SHOWN = `shown${EVENT_KEY}`;\nconst EVENT_HIDE = `hide${EVENT_KEY}`;\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`;\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\nconst CLASS_NAME_SHOW = 'show';\nconst CLASS_NAME_COLLAPSE = 'collapse';\nconst CLASS_NAME_COLLAPSING = 'collapsing';\nconst CLASS_NAME_COLLAPSED = 'collapsed';\nconst WIDTH = 'width';\nconst HEIGHT = 'height';\nconst SELECTOR_ACTIVES = '.show, .collapsing';\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]';\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element);\n    this._isTransitioning = false;\n    this._config = this._getConfig(config);\n    this._triggerArray = SelectorEngine.find(`${SELECTOR_DATA_TOGGLE}[href=\"#${this._element.id}\"],` + `${SELECTOR_DATA_TOGGLE}[data-bs-target=\"#${this._element.id}\"]`);\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE);\n\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i];\n      const selector = getSelectorFromElement(elem);\n      const filterElement = SelectorEngine.find(selector).filter(foundElem => foundElem === this._element);\n\n      if (selector !== null && filterElement.length) {\n        this._selector = selector;\n\n        this._triggerArray.push(elem);\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null;\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n    }\n\n    if (this._config.toggle) {\n      this.toggle();\n    }\n  } // Getters\n\n\n  static get Default() {\n    return Default;\n  }\n\n  static get NAME() {\n    return NAME;\n  } // Public\n\n\n  toggle() {\n    if (this._element.classList.contains(CLASS_NAME_SHOW)) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return;\n    }\n\n    let actives;\n    let activesData;\n\n    if (this._parent) {\n      actives = SelectorEngine.find(SELECTOR_ACTIVES, this._parent).filter(elem => {\n        if (typeof this._config.parent === 'string') {\n          return elem.getAttribute('data-bs-parent') === this._config.parent;\n        }\n\n        return elem.classList.contains(CLASS_NAME_COLLAPSE);\n      });\n\n      if (actives.length === 0) {\n        actives = null;\n      }\n    }\n\n    const container = SelectorEngine.findOne(this._selector);\n\n    if (actives) {\n      const tempActiveData = actives.find(elem => container !== elem);\n      activesData = tempActiveData ? Collapse.getInstance(tempActiveData) : null;\n\n      if (activesData && activesData._isTransitioning) {\n        return;\n      }\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW);\n\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n\n    if (actives) {\n      actives.forEach(elemActive => {\n        if (container !== elemActive) {\n          Collapse.collapseInterface(elemActive, 'hide');\n        }\n\n        if (!activesData) {\n          Data.set(elemActive, DATA_KEY, null);\n        }\n      });\n    }\n\n    const dimension = this._getDimension();\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE);\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING);\n\n    this._element.style[dimension] = 0;\n\n    if (this._triggerArray.length) {\n      this._triggerArray.forEach(element => {\n        element.classList.remove(CLASS_NAME_COLLAPSED);\n        element.setAttribute('aria-expanded', true);\n      });\n    }\n\n    this.setTransitioning(true);\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_COLLAPSING);\n\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);\n\n      this._element.style[dimension] = '';\n      this.setTransitioning(false);\n      EventHandler.trigger(this._element, EVENT_SHOWN);\n    };\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n    const scrollSize = `scroll${capitalizedDimension}`;\n\n    this._queueCallback(complete, this._element, true);\n\n    this._element.style[dimension] = `${this._element[scrollSize]}px`;\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return;\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n\n    const dimension = this._getDimension();\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n    reflow(this._element);\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING);\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);\n\n    const triggerArrayLength = this._triggerArray.length;\n\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i];\n        const elem = getElementFromSelector(trigger);\n\n        if (elem && !elem.classList.contains(CLASS_NAME_SHOW)) {\n          trigger.classList.add(CLASS_NAME_COLLAPSED);\n          trigger.setAttribute('aria-expanded', false);\n        }\n      }\n    }\n\n    this.setTransitioning(true);\n\n    const complete = () => {\n      this.setTransitioning(false);\n\n      this._element.classList.remove(CLASS_NAME_COLLAPSING);\n\n      this._element.classList.add(CLASS_NAME_COLLAPSE);\n\n      EventHandler.trigger(this._element, EVENT_HIDDEN);\n    };\n\n    this._element.style[dimension] = '';\n\n    this._queueCallback(complete, this._element, true);\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning;\n  } // Private\n\n\n  _getConfig(config) {\n    config = { ...Default,\n      ...config\n    };\n    config.toggle = Boolean(config.toggle); // Coerce string values\n\n    typeCheckConfig(NAME, config, DefaultType);\n    return config;\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(WIDTH) ? WIDTH : HEIGHT;\n  }\n\n  _getParent() {\n    let {\n      parent\n    } = this._config;\n    parent = getElement(parent);\n    const selector = `${SELECTOR_DATA_TOGGLE}[data-bs-parent=\"${parent}\"]`;\n    SelectorEngine.find(selector, parent).forEach(element => {\n      const selected = getElementFromSelector(element);\n\n      this._addAriaAndCollapsedClass(selected, [element]);\n    });\n    return parent;\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    if (!element || !triggerArray.length) {\n      return;\n    }\n\n    const isOpen = element.classList.contains(CLASS_NAME_SHOW);\n    triggerArray.forEach(elem => {\n      if (isOpen) {\n        elem.classList.remove(CLASS_NAME_COLLAPSED);\n      } else {\n        elem.classList.add(CLASS_NAME_COLLAPSED);\n      }\n\n      elem.setAttribute('aria-expanded', isOpen);\n    });\n  } // Static\n\n\n  static collapseInterface(element, config) {\n    let data = Collapse.getInstance(element);\n    const _config = { ...Default,\n      ...Manipulator.getDataAttributes(element),\n      ...(typeof config === 'object' && config ? config : {})\n    };\n\n    if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false;\n    }\n\n    if (!data) {\n      data = new Collapse(element, _config);\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n\n      data[config]();\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Collapse.collapseInterface(this, config);\n    });\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {\n    event.preventDefault();\n  }\n\n  const triggerData = Manipulator.getDataAttributes(this);\n  const selector = getSelectorFromElement(this);\n  const selectorElements = SelectorEngine.find(selector);\n  selectorElements.forEach(element => {\n    const data = Collapse.getInstance(element);\n    let config;\n\n    if (data) {\n      // update parent attribute\n      if (data._parent === null && typeof triggerData.parent === 'string') {\n        data._config.parent = triggerData.parent;\n        data._parent = data._getParent();\n      }\n\n      config = 'toggle';\n    } else {\n      config = triggerData;\n    }\n\n    Collapse.collapseInterface(element, config);\n  });\n});\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Collapse to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Collapse);\nexport default Collapse;","map":{"version":3,"sources":["/home/wardes/DEVSUPERIOR_BOOTCAMP/movieflix/frontweb/node_modules/bootstrap/js/src/collapse.js"],"names":["defineJQueryPlugin","getElement","getSelectorFromElement","getElementFromSelector","reflow","typeCheckConfig","Data","EventHandler","Manipulator","SelectorEngine","BaseComponent","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","Default","toggle","parent","DefaultType","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDDEN","EVENT_CLICK_DATA_API","CLASS_NAME_SHOW","CLASS_NAME_COLLAPSE","CLASS_NAME_COLLAPSING","CLASS_NAME_COLLAPSED","WIDTH","HEIGHT","SELECTOR_ACTIVES","SELECTOR_DATA_TOGGLE","Collapse","constructor","element","config","_isTransitioning","_config","_getConfig","_triggerArray","find","_element","id","toggleList","i","len","length","elem","selector","filterElement","filter","foundElem","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","classList","contains","hide","show","actives","activesData","getAttribute","container","findOne","tempActiveData","getInstance","startEvent","trigger","defaultPrevented","forEach","elemActive","collapseInterface","set","dimension","_getDimension","remove","add","style","setAttribute","setTransitioning","complete","capitalizedDimension","toUpperCase","slice","scrollSize","_queueCallback","getBoundingClientRect","triggerArrayLength","isTransitioning","Boolean","selected","triggerArray","isOpen","data","getDataAttributes","test","TypeError","jQueryInterface","each","on","document","event","target","tagName","delegateTarget","preventDefault","triggerData","selectorElements"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getSelectorFromElement,\n  getElementFromSelector,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst Default = {\n  toggle: true,\n  parent: ''\n}\n\nconst DefaultType = {\n  toggle: 'boolean',\n  parent: '(string|element)'\n}\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.show, .collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._isTransitioning = false\n    this._config = this._getConfig(config)\n    this._triggerArray = SelectorEngine.find(\n      `${SELECTOR_DATA_TOGGLE}[href=\"#${this._element.id}\"],` +\n      `${SELECTOR_DATA_TOGGLE}[data-bs-target=\"#${this._element.id}\"]`\n    )\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i]\n      const selector = getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElem => foundElem === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._selector = selector\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    if (this._element.classList.contains(CLASS_NAME_SHOW)) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    if (this._parent) {\n      actives = SelectorEngine.find(SELECTOR_ACTIVES, this._parent)\n        .filter(elem => {\n          if (typeof this._config.parent === 'string') {\n            return elem.getAttribute('data-bs-parent') === this._config.parent\n          }\n\n          return elem.classList.contains(CLASS_NAME_COLLAPSE)\n        })\n\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    const container = SelectorEngine.findOne(this._selector)\n    if (actives) {\n      const tempActiveData = actives.find(elem => container !== elem)\n      activesData = tempActiveData ? Collapse.getInstance(tempActiveData) : null\n\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    if (actives) {\n      actives.forEach(elemActive => {\n        if (container !== elemActive) {\n          Collapse.collapseInterface(elemActive, 'hide')\n        }\n\n        if (!activesData) {\n          Data.set(elemActive, DATA_KEY, null)\n        }\n      })\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    if (this._triggerArray.length) {\n      this._triggerArray.forEach(element => {\n        element.classList.remove(CLASS_NAME_COLLAPSED)\n        element.setAttribute('aria-expanded', true)\n      })\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      this.setTransitioning(false)\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    const triggerArrayLength = this._triggerArray.length\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i]\n        const elem = getElementFromSelector(trigger)\n\n        if (elem && !elem.classList.contains(CLASS_NAME_SHOW)) {\n          trigger.classList.add(CLASS_NAME_COLLAPSED)\n          trigger.setAttribute('aria-expanded', false)\n        }\n      }\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this.setTransitioning(false)\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(WIDTH) ? WIDTH : HEIGHT\n  }\n\n  _getParent() {\n    let { parent } = this._config\n\n    parent = getElement(parent)\n\n    const selector = `${SELECTOR_DATA_TOGGLE}[data-bs-parent=\"${parent}\"]`\n\n    SelectorEngine.find(selector, parent)\n      .forEach(element => {\n        const selected = getElementFromSelector(element)\n\n        this._addAriaAndCollapsedClass(\n          selected,\n          [element]\n        )\n      })\n\n    return parent\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    if (!element || !triggerArray.length) {\n      return\n    }\n\n    const isOpen = element.classList.contains(CLASS_NAME_SHOW)\n\n    triggerArray.forEach(elem => {\n      if (isOpen) {\n        elem.classList.remove(CLASS_NAME_COLLAPSED)\n      } else {\n        elem.classList.add(CLASS_NAME_COLLAPSED)\n      }\n\n      elem.setAttribute('aria-expanded', isOpen)\n    })\n  }\n\n  // Static\n\n  static collapseInterface(element, config) {\n    let data = Collapse.getInstance(element)\n    const _config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(element),\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    if (!data) {\n      data = new Collapse(element, _config)\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Collapse.collapseInterface(this, config)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  const triggerData = Manipulator.getDataAttributes(this)\n  const selector = getSelectorFromElement(this)\n  const selectorElements = SelectorEngine.find(selector)\n\n  selectorElements.forEach(element => {\n    const data = Collapse.getInstance(element)\n    let config\n    if (data) {\n      // update parent attribute\n      if (data._parent === null && typeof triggerData.parent === 'string') {\n        data._config.parent = triggerData.parent\n        data._parent = data._getParent()\n      }\n\n      config = 'toggle'\n    } else {\n      config = triggerData\n    }\n\n    Collapse.collapseInterface(element, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Collapse to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n"]},"metadata":{},"sourceType":"module"}