{"ast":null,"code":"var _jsxFileName = \"/home/wardes/DEVSUPERIOR_BOOTCAMP/movieflix/frontweb/src/components/PrivateRoute/index.tsx\";\nimport { Redirect, Route } from 'react-router-dom';\nimport { hasAnyRoles, isAuthenticated } from 'util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  children,\n  path,\n  roles = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    render: ({\n      location\n    }) => !isAuthenticated() ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/admin/auth/login',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this) : !hasAnyRoles(roles) ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/admin/products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/wardes/DEVSUPERIOR_BOOTCAMP/movieflix/frontweb/src/components/PrivateRoute/index.tsx"],"names":["Redirect","Route","hasAnyRoles","isAuthenticated","PrivateRoute","children","path","roles","location","pathname","state","from"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAAmD,WAAnD;;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,KAAK,GAAG;AAA1B,CAAD,KAA2C;AAC9D,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KACN,CAACL,eAAe,EAAhB,gBACE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFM,QAAAA,QAAQ,EAAE,mBADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,YADF,GAOI,CAACN,WAAW,CAACK,KAAD,CAAZ,gBACF,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADE,GAGFF;AAbN;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;KAAMD,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { Redirect, Route } from 'react-router-dom';\r\nimport { hasAnyRoles, isAuthenticated, Role } from 'util/auth';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  path: string;\r\n  roles?: Role[];\r\n};\r\n\r\nconst PrivateRoute = ({ children, path, roles = [] }: Props) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={({ location }) =>\r\n        !isAuthenticated() ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/admin/auth/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        ) : !hasAnyRoles(roles) ? (\r\n          <Redirect to=\"/admin/products\" />\r\n        ) : (\r\n          children\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}