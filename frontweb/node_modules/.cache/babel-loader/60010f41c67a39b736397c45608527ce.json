{"ast":null,"code":"var _jsxFileName = \"/home/wardes/DEVSUPERIOR_BOOTCAMP/movieflix/frontweb/src/pages/MoviesCatalog/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { requestBackend } from 'util/requests';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesCatalog = () => {\n  _s();\n\n  const [page, setPage] = useState();\n  useEffect(() => {\n    const params = {\n      url: '/movies',\n      withCredentials: true,\n      params: {\n        page: 0,\n        size: 12\n      }\n    };\n    requestBackend(params).then(response => {\n      console.log(response.data);\n      setPage(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container custom-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tela listagem de filme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), page === null || page === void 0 ? void 0 : page.content.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links-area\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `movies/${item.id}`,\n        children: [\"Acessar /movies/\", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviesCatalog, \"g/XYR6a5Ljv8Nir5rb89yZzpJS0=\");\n\n_c = MoviesCatalog;\nexport default MoviesCatalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCatalog\");","map":{"version":3,"sources":["/home/wardes/DEVSUPERIOR_BOOTCAMP/movieflix/frontweb/src/pages/MoviesCatalog/index.tsx"],"names":["useEffect","useState","Link","requestBackend","MoviesCatalog","page","setPage","params","url","withCredentials","size","then","response","console","log","data","content","map","item","key","id"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,cAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,MAA0B,GAAG;AACjCC,MAAAA,GAAG,EAAE,SAD4B;AAEjCC,MAAAA,eAAe,EAAE,IAFgB;AAGjCF,MAAAA,MAAM,EAAE;AACNF,QAAAA,IAAI,EAAE,CADA;AAENK,QAAAA,IAAI,EAAE;AAFA;AAHyB,KAAnC;AASAP,IAAAA,cAAc,CAACI,MAAD,CAAd,CAAuBI,IAAvB,CAA6BC,QAAD,IAAc;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAEAT,MAAAA,OAAO,CAACM,QAAQ,CAACG,IAAV,CAAP;AACD,KAJD;AAKD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEW,OAAN,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,GAAP,kBACjB;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASD,IAAI,CAACE,EAAG,EAA5B;AAAA,uCAAgDF,IAAI,CAACE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,oBAES;AAAA;AAAA;AAAA;AAAA,cAFT;AAAA,OAAiCF,IAAI,CAACE,EAAtC;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMhB,a;;KAAAA,a;AAkCN,eAAeA,aAAf","sourcesContent":["import { AxiosRequestConfig } from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Movie } from 'types/movie';\r\nimport { SpringPage } from 'types/vendor/spring';\r\nimport { requestBackend } from 'util/requests';\r\n\r\nimport './styles.css'\r\n \r\nconst MoviesCatalog = () => {\r\n  const [page, setPage] = useState<SpringPage<Movie>>();\r\n\r\n  useEffect(() => {\r\n    const params: AxiosRequestConfig = {\r\n      url: '/movies',\r\n      withCredentials: true,\r\n      params: {\r\n        page: 0,\r\n        size: 12,\r\n      },\r\n    };\r\n\r\n    requestBackend(params).then((response) => {\r\n      console.log(response.data);\r\n      \r\n      setPage(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container custom-content\">\r\n      <h1>Tela listagem de filme</h1>\r\n      {page?.content.map((item, key) => (\r\n        <div className=\"links-area\" key={item.id}>\r\n          <Link to={`movies/${item.id}`}>Acessar /movies/{item.id}</Link>\r\n          <br /> <br />\r\n    \r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default MoviesCatalog;\r\n"]},"metadata":{},"sourceType":"module"}